<template>
	<view class="login-container" :class="[isShow ? 'translateY0' : 'translateY100']" @click.stop>
		<view class="bg bg-color-base margin-b20"></view>
		
		<view class="tab vs-row vs-align-center">
			<image class="tab-bg" src="/static/banner-icon.png" mode=""></image>
			
			<view class="vs-row vs-align-center" @click="test">
				<view class="vs-column vs-align-center margin-r40">
					<text class="font-50 margin-b20 color-base">嘻嘻</text>
					<view class="line bg-color-base"></view>
				</view>
			</view>
		</view>
		<view class="login">
			<view class="input vs-row vs-align-center margin-b40">
				<image class="input-icon margin-r20" src="/static/account.png" mode=""></image>
				<input class="vs-flex-item color-base font-30" v-model="mobile" :maxlength="11" placeholder="请输入手机号" placeholder-class="input-placeholder"/>
			</view>
		</view>
		
		<view class="login margin-b80">
			<view class="input vs-row vs-align-center margin-b40">
				<image class="input-icon margin-r20" src="/static/account.png" mode=""></image>
				<input class="vs-flex-item color-base font-30" password v-model="password" :maxlength="11" placeholder="请输入密码" placeholder-class="input-placeholder"/>
			</view>
		</view>
		
		<view class="button bg-color-base vs-row vs-align-center vs-space-center margin-b20" @click="gotoIndex">
			<text class="color-white font-34" >芝麻开门</text>
		</view>
		
		
	</view>
</template>

<script>
	export default {
		data() {
			return {
				isShow: false,
				mobile: '',
				password: '',
				cloudLoginPwd: ''
			}
		},
		mounted() {
			this.isShow = true
			this.cloudLoginPwd = uni.getStorageSync('cloudLoginPwd') || ''
			setTimeout(() => {
				this.password = uni.getStorageSync('loginPwd') || ''
			}, 1000)
		},
		methods: {
			gotoIndex() {
				if(this.password !== this.cloudLoginPwd) {
					uni.showSToast('密码错误, 不是自己人')
				}else {
					uni.showSToast('密码正确, 自己人')
					uni.setStorageSync('loginPwd', this.password)
					setTimeout(() => {
						uni.redirectTo({
							url: '/pages/index/index'
						})
					}, 1000)
				}
			},
			test() {
				this.isShow = !this.isShow
				setTimeout(() => {
					this.hide()
				}, 600)
			},
			hide() {
				this.$parent.loginViewShow = false
			}
		
		}
	}
</script>

<style lang="scss">
	.translateY0 {
		transform: translateY(0%);
	}
	.translateY100 {
		transform: translateY(100%);
	}
	.login-container {
		position: fixed;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		background-color: #fff;
		// transform: translateY(100%);
		transition-property: transform;
		transition-duration: 0.6s;
		transition-delay: 0s;
		transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1.0);
	}
	
	.bg {
		position: relative;
		width: 750rpx;
		height: 400rpx;
	}
	
	.tab {
		position: absolute;
		top: 250rpx;
		left: 20rpx;
		right: 20rpx;
		height: 150rpx;
		padding: 0 50rpx;
		background-color: #fff;
		border-top-left-radius: 20rpx;
		border-top-right-radius: 20rpx;
		
		&-bg {
			position: absolute;
			top: -200rpx;
			right: -50rpx;
			width: 440rpx;
			height: 285rpx;
		}
	}
	
	.line {
		width: 25rpx;
		height: 7rpx;
	}
	
	.login, .register {
		padding: 0 60rpx;
	}
	
	.input {
		width: 630rpx;
		height: 90rpx;
		padding: 0 30rpx;
		background-color: rgba(80, 100, 235, 0.1);
		border-radius: 50%;
		
		&-icon {
			width: 30rpx;
			height: 38rpx;
		}
		
		&-placeholder {
			color: #5064eb;
		}
	}
	
	.button {
		width: 630rpx;
		height: 90rpx;
		margin-left: 60rpx;
		border-radius: 50%;
	}
	
	.separator {
		height: 2rpx;
		margin: 0 30rpx;
		background-color: #f5f5f5;
	}
	
	.other {
		&-items {
			padding: 0 200rpx;
		}
		
		&-icon {
			width: 50rpx;
			height: 50rpx;
		}
	}
</style>
